from requests import Session


class RPClient:
    endpoint: str = ...
    log_batch_size: int = ...
    project: str = ...
    token: str = ...
    launch_id: str = ...
    verify_ssl: bool = ...
    is_skipped_an_issue: bool = ...
    api_v1: str = ...
    api_v2: str = ...
    base_url_v1: str = ...
    base_url_v2: str = ...
    session: Session = ...

    def __init__(self, endpoint: str, project: str, token: str,
                 log_batch_size: int = ...,
                 is_skipped_an_issue: bool = ..., verify_ssl: bool = ...,
                 retries: int = ...,
                 max_pool_size: int = ..., launch_id: str = ...) -> None: ...

    def start_launch(self, name: str, start_time: str, description: str = ...,
                     attributes: dict = ..., mode: str = ..., rerun: bool = ...,
                     rerun_of: list = ..., **kwargs) -> str: ...

    def finish_launch(self, end_time: str, status: str = ...,
                      attributes: dict = ...,
                      **kwargs) -> dict: ...

    def start_item(self, name: str, start_time: str, item_type: str,
                   description: str = ...,
                   attributes: dict = ..., parameters: dict = ...,
                   parent_item_id: str = ..., has_stats: bool = ...,
                   code_ref: str = ...,
                   **kwargs) -> str: ...

    def finish_item(self, item_id: str, end_time: str, status: str,
                    issue: str = ...,
                    attributes: dict = ..., **kwargs) -> None: ...

    def save_log(self, log_time, **kwargs) -> None: ...
