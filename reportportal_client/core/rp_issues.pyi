from typing import Dict, List, Optional

class Issue:
    _external_issues: List = ...
    auto_analyzed: bool = ...
    comment: str = ...
    ignore_analyzer: bool = ...
    issue_type: str = ...
    def __init__(self,
                 issue_type: str,
                 comment: Optional[str] = ...,
                 auto_analyzed: Optional[bool] = ...,
                 ignore_analyzer: Optional[bool] = ...) -> None: ...
    def external_issue_add(self, issue: ExternalIssue) -> None: ...
    @property
    def payload(self) -> Dict: ...

class ExternalIssue:
    bts_url: str = ...
    bts_project: str = ...
    submit_date: str = ...
    ticket_id: str = ...
    url: str = ...
    def __init__(self,
                 bts_url: Optional[str] = ...,
                 bts_project: Optional[str] = ...,
                 submit_date: Optional[str] = ...,
                 ticket_id: Optional[str] = ...,
                 url: Optional[str] = ...) -> None: ...
    @property
    def payload(self) -> Dict: ...
